{"version":3,"sources":["components/Book/Book.module.css","components/Bookshelf/Bookshelf.module.css","components/pages/BookList/BookList.module.css","components/pages/PageNotFound/PageNotFound.module.css","api/BooksAPI.js","components/AddBookButton/AddBookButton.js","components/BookShelfChanger/BookShelfChanger.js","components/Book/Book.js","components/Bookshelf/Bookshelf.js","components/BookCase/BookCase.js","components/pages/BookList/BookList.js","components/SearchBar/SearchBar.js","components/SearchResult/SearchResult.js","components/pages/BookSearch/BookSearch.js","components/pages/PageNotFound/PageNotFound.js","App.js","index.js"],"names":["module","exports","book","bookTitle","bookAuthors","bookTop","bookshelf","bookshelfTitle","bookshelfBooks","listBooksTitle","listBooksContent","container","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","AddBookButton","react_default","a","createElement","react_router_dom","to","className","Component","BookShelfChanger","state","_this","props","value","onChangeHandler","setState","updateShelf","_this2","this","onChange","event","target","disabled","Book","classes","bookCover","style","width","height","backgroundImage","undefined","imageLinks","thumbnail","components_BookShelfChanger_BookShelfChanger","title","authors","map","author","index","length","Bookshelf","_this$props","key","components_Book_Book","BookCase","shelves","components_Bookshelf_Bookshelf","uuidv4","filter","toLowerCase","prototypes","PropTypes","object","isRequired","array","func","BookList","Shelves","components_BookCase_BookCase","components_AddBookButton_AddBookButton","SearchBar","updateQuery","type","placeholder","e","SearchResult","BookSearch","components_SearchBar_SearchBar","components_SearchResult_SearchResult","queryBooks","PageNotFound","BooksApp","BookShelves","BooksAPI","catch","error","console","log","booksWithShelves","forEach","b","_this3","react_router","exact","path","pages_BookList_BookList","pages_BookSearch_BookSearch","component","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.deef9b18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"Book_book__2TnZT\",\"bookTitle\":\"Book_bookTitle___lfMj\",\"bookAuthors\":\"Book_bookAuthors__3LP8E\",\"bookTop\":\"Book_bookTop__3dDQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookshelf\":\"Bookshelf_bookshelf__19WAx\",\"bookshelfTitle\":\"Bookshelf_bookshelfTitle__2NDhc\",\"bookshelfBooks\":\"Bookshelf_bookshelfBooks__3yLHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBooksTitle\":\"BookList_listBooksTitle__1jxgv\",\"listBooksContent\":\"BookList_listBooksContent__3T6JG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageNotFound_container__YvCp1\"};","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddBookButton extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/search\">\r\n          <div className=\"open-search\">\r\n            <button>Add a book</button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBookButton;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BookShelfChanger extends Component {\r\n  state = {\r\n    shelf: this.props.value,\r\n  };\r\n\r\n  onChangeHandler = (shelf) => {\r\n    this.setState(() => ({ shelf }));\r\n    this.props.updateShelf(shelf);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select\r\n          value={value}\r\n          onChange={(event) => this.onChangeHandler(event.target.value)}\r\n        >\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBookShelfChanger.propTypes = {\r\n  value: PropTypes.string,\r\n  updateShelf: PropTypes.func,\r\n};\r\n\r\nexport default BookShelfChanger;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Book.module.css\";\r\nimport BookShelfChanger from \"../BookShelfChanger/BookShelfChanger\";\r\n\r\nclass Book extends Component {\r\n  render() {\r\n    const { book } = this.props;\r\n    return (\r\n      <div className={classes.book}>\r\n        <div className={classes.bookTop}>\r\n          <div\r\n            className={classes.bookCover}\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage:\r\n                book.imageLinks !== undefined\r\n                  ? `url(${book.imageLinks.thumbnail})`\r\n                  : \"url()\",\r\n            }}\r\n          />\r\n          <BookShelfChanger\r\n            value={book.shelf !== undefined ? book.shelf : \"none\"}\r\n            updateShelf={(shelf) => {\r\n              this.props.updateShelf(shelf, book);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.bookTitle}>{book.title}</div>\r\n        <div className={classes.bookAuthors}>\r\n          {book.authors !== undefined\r\n            ? book.authors.map(\r\n                (author, index) =>\r\n                  `${author}${index + 1 === book.authors.length ? \"\" : \", \"}`\r\n              )\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  updateShelf: PropTypes.func,\r\n};\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Bookshelf.module.css\";\r\nimport Book from \"../Book/Book\";\r\n\r\nclass Bookshelf extends Component {\r\n  render() {\r\n    const { books, shelf } = this.props;\r\n    return (\r\n      <div className={classes.bookshelf}>\r\n        <h2 className={classes.bookshelfTitle}>\r\n          {shelf === \"currentlyReading\"\r\n            ? \"Currently Reading\"\r\n            : this.props.shelf === \"wantToRead\"\r\n            ? \"Want To Read\"\r\n            : \"Read\"}\r\n        </h2>\r\n        <div className={classes.bookshelfBooks}>\r\n          <ol className=\"books-grid\">\r\n            {books.map((book) => (\r\n              <li key={book.id}>\r\n                <Book\r\n                  book={book}\r\n                  updateShelf={(shelf, book) => {\r\n                    this.props.updateShelf(shelf, book);\r\n                  }}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookshelf.propTypes = {\r\n  shelf: PropTypes.string.isRequired,\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Bookshelf;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Bookshelf from \"../Bookshelf/Bookshelf\";\r\n\r\nclass BookCase extends Component {\r\n  render() {\r\n    const { books, shelves } = this.props;\r\n    return (\r\n      <div>\r\n        {shelves.map((shelf) => (\r\n          <Bookshelf\r\n            key={uuidv4()}\r\n            shelf={shelf}\r\n            books={books.filter(\r\n              (book) => book.shelf.toLowerCase() === shelf.toLowerCase()\r\n            )}\r\n            updateShelf={(shelf, book) => {\r\n              this.props.updateShelf(shelf, book);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookCase.prototypes = {\r\n  shelves: PropTypes.object.isRequired,\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookCase;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./BookList.module.css\";\r\nimport AddBookButton from \"../../AddBookButton/AddBookButton\";\r\nimport BookCase from \"../../BookCase/BookCase\";\r\n\r\nclass BookList extends Component {\r\n  render() {\r\n    const { books, Shelves } = this.props;\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className={classes.listBooksTitle}>\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className={classes.listBooksContent}>\r\n          <BookCase\r\n            shelves={Shelves}\r\n            books={books}\r\n            updateShelf={(shelf, book) => {\r\n              this.props.updateShelf(shelf, book);\r\n            }}\r\n          />\r\n        </div>\r\n        <AddBookButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookList.prototypes = {\r\n  shelves: PropTypes.array.isRequired,\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookList;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  onChangeHandler = (query) => {\r\n    this.setState(() => ({\r\n      query,\r\n    }));\r\n    this.props.updateQuery(query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\">\r\n          <button className=\"close-search\">Close</button>\r\n        </Link>\r\n\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title or author\"\r\n            value={this.state.query}\r\n            onChange={(e) => {\r\n              this.onChangeHandler(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport Book from \"../Book/Book\";\r\n\r\nclass SearchResult extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {this.props.books.length > 0\r\n            ? this.props.books.map((book) => (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    book={book}\r\n                    updateShelf={(shelf, book) => {\r\n                      this.props.updateShelf(shelf, book);\r\n                    }}\r\n                  />\r\n                </li>\r\n              ))\r\n            : \"\"}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\nimport SearchBar from \"../../SearchBar/SearchBar\";\r\nimport SearchResult from \"../../SearchResult/SearchResult\";\r\n\r\nconst BookSearch = (props) => {\r\n  return (\r\n    <div className=\"search-books\">\r\n      <SearchBar\r\n        updateQuery={(query) => {\r\n          props.updateQuery(query);\r\n        }}\r\n      />\r\n      <SearchResult\r\n        books={props.queryBooks}\r\n        updateShelf={(shelf, book) => {\r\n          props.updateShelf(shelf, book);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookSearch;\r\n","import React from \"react\";\r\nimport classes from \"./PageNotFound.module.css\";\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div>\r\n        <h2>Error 404</h2>\r\n        <h3>Page Not Found</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport * as BooksAPI from \"./api/BooksAPI\";\r\nimport \"./App.css\";\r\nimport BookList from \"./components/pages/BookList/BookList\";\r\nimport BookSearch from \"./components/pages/BookSearch/BookSearch\";\r\nimport PageNotFound from \"./components/pages/PageNotFound/PageNotFound\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    BookShelves: [\"currentlyReading\", \"wantToRead\", \"Read\"],\r\n    query: [],\r\n    books: [],\r\n  };\r\n\r\n  updateShelf = (shelf, book) => {\r\n    BooksAPI.update(book, shelf).then(() => {\r\n      BooksAPI.getAll()\r\n        .then((books) => {\r\n          this.setState(() => ({\r\n            books,\r\n          }));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  updateQuery = (query) => {\r\n    if (query === \"\") {\r\n      this.setState(() => ({\r\n        query: [],\r\n      }));\r\n      return;\r\n    }\r\n    BooksAPI.search(query).then((books) => {\r\n      if (books.length > 0) {\r\n        const booksWithShelves = books.map((book) => {\r\n          this.state.books.forEach((b) => {\r\n            if (b.id === book.id) {\r\n              book.shelf = b.shelf;\r\n            }\r\n          });\r\n\r\n          return book;\r\n        });\r\n\r\n        this.setState(() => ({\r\n          query: booksWithShelves,\r\n        }));\r\n      } else {\r\n        this.setState(() => ({\r\n          query: [],\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n      .then((books) => {\r\n        this.setState(() => ({\r\n          books,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <BookList\r\n            Shelves={this.state.BookShelves}\r\n            books={this.state.books}\r\n            updateShelf={(shelf, book) => this.updateShelf(shelf, book)}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/search\">\r\n          <BookSearch\r\n            updateQuery={(query) => {\r\n              this.updateQuery(query);\r\n            }}\r\n            queryBooks={this.state.query}\r\n            updateShelf={(shelf, book) => {\r\n              this.updateShelf(shelf, book);\r\n            }}\r\n          />\r\n        </Route>\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}